@model UserManagement.Models.UserTable

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <link href="~/Content/AdminTamplate/css/sb-admin-2.css" rel="stylesheet" />

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>User Register</title>

    <!-- Custom fonts for this template-->
    <link href="~/Content/AdminTamplate/vendor/fontawesome-free/css/all.min.css" rel="stylesheet" type="text/css">
    <link href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i"
          rel="stylesheet">

    <!-- Custom styles for this template-->
    <link href="~/Content/AdminTamplate/css/sb-admin-2.min.css" rel="stylesheet">

</head>
<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()



        <div class="container d-flex justify-content-center ">
            <div class="col-xl-7 col-lg col-md-7">
                <div class="card o-hidden border-0 shadow-lg my-4">
                    <div class="card-body p-5 d-flex justify-content-center">
                        <!-- Nested Row within Card Body -->

                        <div>
                            <div class="text-center">
                                <h1 class="h4 text-gray-900 mb-4" style="border :1px solid black;padding:5px;background-color:blue;color:black;border-radius:5px;">Create an Account!</h1>
                            </div>
                            <form class="user">


                                <div class="form-group col-lg-10 " style="padding:unset">
                                    <label>Role Type</label>
                                    @Html.DropDownList("RoleID", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.RoleID, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group">
                                    <label>Full Name</label>
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

                                </div>
                                <div class="form-group">
                                    <label>Email</label>
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

                                </div>
                                <div class="form-group">
                                    <label>Password</label>
                                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })

                                </div>
                                <div class="form-group">
                                    <label>Phone</label>
                                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })

                                </div>
                                <div class="form-group">
                                    <label>AddOn</label>
                                    @Html.EditorFor(model => model.AddOn, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.AddOn, "", new { @class = "text-danger" })

                                </div>
                                <div class="form-group">
                                    <label>Sign Up</label>
                                    @Html.EditorFor(model => model.Signup, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Signup, "", new { @class = "text-danger" })

                                </div>
                                <div class="form-group">
                                    <label>IsActive</label>
                                    @Html.EditorFor(model => model.IsActive)
                                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })

                                </div>
                                <div class="form-group text-center" style="align-content:center;">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Registration" id="reg" onclick="myFunction()" class="btn btn-primary" />
                                    </div>
                                </div>

                            </form>
                            <hr>

                            <div class="text-center">
                                <a class="small" href="forgot-password.html">Forgot Password?</a>
                            </div>
                            <div class="text-center">
                                <h5>Already have an account?@Html.ActionLink("Login", "Login", "Home", null, new { @class = "color-blue" })</h5>
                            </div>
                            <hr>

                        </div>

                    </div>
                </div>
            </div>

        </div>



        <script>
            function myFunction() {
                alert("Registration Successfully ");
            }
        </script>





























        @* <div class="container">
                <div class="form-horizontal">
                    <h4 style="background-color:blue;color:black;">User Registration</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })



                    <div class="form-group">
                        @Html.LabelFor(model => model.RoleID, "RoleID", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("RoleID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.RoleID, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <div class="form-group">
                        @Html.LabelFor(model => model.AddOn, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.AddOn, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AddOn, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Signup, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Signup, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Signup, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.IsActive)
                                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div><span>Forgot Password</span></div>





                    <div class="form-group text-center" style="align-content:center;">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Registration" class="btn btn-default" style="background-color:blue;color:black;" />
                        </div>
                    </div>
                </div>
            </div>*@
    }



    <!-- Bootstrap core JavaScript-->
    <script src="~/Content/AdminTamplate/vendor/jquery/jquery.min.js"></script>
    <script src="~/Content/AdminTamplate/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>

    <!-- Core plugin JavaScript-->
    <script src="~/Content/AdminTamplate/vendor/jquery-easing/jquery.easing.min.js"></script>

    <!-- Custom scripts for all pages-->
    <script src="~/Content/AdminTamplate/js/sb-admin-2.min.js"></script>

</body>
</html>
